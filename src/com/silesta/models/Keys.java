/*
 * This file is generated by jOOQ.
 */
package com.silesta.models;


import com.silesta.models.tables.BankOperations;
import com.silesta.models.tables.records.BankOperationsRecord;

import javax.annotation.processing.Generated;

import org.jooq.Identity;
import org.jooq.UniqueKey;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables of 
 * the <code>public</code> schema.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.11"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // IDENTITY definitions
    // -------------------------------------------------------------------------

    public static final Identity<BankOperationsRecord, Integer> IDENTITY_BANK_OPERATIONS = Identities0.IDENTITY_BANK_OPERATIONS;

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<BankOperationsRecord> PK = UniqueKeys0.PK;

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------


    // -------------------------------------------------------------------------
    // [#1459] distribute members to avoid static initialisers > 64kb
    // -------------------------------------------------------------------------

    private static class Identities0 {
        public static Identity<BankOperationsRecord, Integer> IDENTITY_BANK_OPERATIONS = Internal.createIdentity(BankOperations.BANK_OPERATIONS, BankOperations.BANK_OPERATIONS.ID);
    }

    private static class UniqueKeys0 {
        public static final UniqueKey<BankOperationsRecord> PK = Internal.createUniqueKey(BankOperations.BANK_OPERATIONS, "pk", BankOperations.BANK_OPERATIONS.ID);
    }
}
